daml 1.2

module Dwolla.Customers where

import Dwolla.FundingSources
import Dwolla.Transfers
import Dwolla.Utils

import DA.Optional


type UnverifiedCustomerRequestCid = ContractId UnverifiedCustomerRequest
type VerifiedCustomerRequestCid   = ContractId VerifiedCustomerRequest
type CustomerCid                  = ContractId Customer


template UnverifiedCustomerRequest
  with
    operator  : Party
    user      : Party
    firstName : Text
    lastName  : Text
    email     : Text
    ipAddress : Text
  where
    signatory operator, user

    ensure validIp ipAddress

    controller operator can
      UnverifiedCustomerRequest_Accept : CustomerCid
        with
          customerId : Text
          created : Time
          status : CustomerStatus
        do
          create Customer with customerType = personal, ..

      UnverifiedCustomerRequest_Reject : ()
        do return ()


template VerifiedCustomerRequest
  with
    operator    : Party
    user        : Party
    firstName   : Text
    lastName    : Text
    email       : Text
    address1    : Text
    optAddress2 : Optional Text
    city        : Text
    state       : Text
    postalCode  : Text
    dateOfBirth : Date
    ssn         : Text
  where
    signatory operator, user

    ensure (validSsn ssn || validSsnSet4 ssn)

    controller operator can
      VerifiedCustomerRequest_Accept : CustomerCid
        with
          customerId : Text
          created : Time
          status : CustomerStatus
        do create Customer with customerType = personal, ..

      VerifiedCustomerRequest_Reject : ()
        do return ()


template Customer
  with
    operator     : Party
    user         : Party
    customerId   : Text
    firstName    : Text
    lastName     : Text
    email        : Text
    customerType : CustomerType
    status       : CustomerStatus
    created      : Time
  where
    signatory operator, user

    ensure validCustomerType customerType
      && validCustomerStatus status

    controller user can
      Customer_Retry : VerifiedCustomerRequestCid
        with
          dateOfBirth : Date
          fullSsn : Text
          optFirstName : Optional Text
          optLastName : Optional Text
          optEmail : Optional Text
          address1 : Text
          optAddress2 : Optional Text
          city : Text
          state : Text
          postalCode : Text
        do
          assert (status == retry)
          assert (validSsn fullSsn)
          create VerifiedCustomerRequest
            with
              ssn = fullSsn
              firstName = fromOptional firstName optFirstName
              lastName = fromOptional lastName optLastName
              email = fromOptional email optEmail
              ..

      Customer_Document : ()
        do
          assert (status == document)
          abort("document status not supported")

      nonconsuming Customer_UnverifiedFundingSourceRequest : UnverifiedFundingSourceRequestCid
        with
          routingNumber : Text
          accountNumber : Text
          bankAccountType : BankAccountType
          name : Text
        do create UnverifiedFundingSourceRequest with ..

      nonconsuming Customer_SendFunds : ReceiveFundsRequestCid
        with
          fundingSourceId : Text
          amount : Amount
          to : Party
          optClearingSrc : Optional Text
          optMetadata : Optional [Metadata]
        do
          assert (status /= suspended && status /= deactivated)
          create ReceiveFundsRequest with
            sender = user, receiver = to, senderSourceId = fundingSourceId, ..
